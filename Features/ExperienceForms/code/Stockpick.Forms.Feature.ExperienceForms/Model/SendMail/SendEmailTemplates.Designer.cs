
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Stockpick.Forms.Feature.ExperienceForms.Model.SendMail
{
  #region Designer generated code

  using System;
  using Sitecore;
  using Sitecore.Diagnostics;
  using Sitecore.Data.Items;
  using Sitecore.Data.Fields;
  using Sitecore.Data;
  
      
  /// <summary>Represents the "E-mail Templates Folder" template.</summary>
  public partial class EmailTemplatesFolder : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{EF52589A-C7CD-413A-9B29-8DC8D8146EC2}");

    public EmailTemplatesFolder(Item item) : base(item) {
    }

    public static class FieldIds {
      
    }
    
    public static EmailTemplatesFolder Create(Item item) 
    {
      return new EmailTemplatesFolder(item);
    }

    public static implicit operator Item (EmailTemplatesFolder item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator EmailTemplatesFolder(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
      
  /// <summary>Represents the "E-mail Template" template.</summary>
  public partial class EmailTemplate : CustomItem
  {
    public static readonly ID TemplateID = ID.Parse("{1FF3E9C9-73D7-4395-960A-7271EED8CC1E}");

    public EmailTemplate(Item item) : base(item) {
    }

    public static class FieldIds {
      
      public static readonly ID Subject = ID.Parse("{BD289C06-A59E-4F38-B824-268973F3EDA9}");

      public static readonly ID From = ID.Parse("{DF91B8A3-7262-42EA-96F0-74796A0A9BC7}");

      public static readonly ID To = ID.Parse("{95FC9607-A6E1-40E2-B4DD-7B7D23E97DEC}");

      public static readonly ID Cc = ID.Parse("{A5C64FE9-A29E-43CB-9861-D696F31BC586}");

      public static readonly ID Bcc = ID.Parse("{BB6A889B-CF26-4188-9882-5498C9E64CAA}");

      public static readonly ID MessageRichText = ID.Parse("{5EAF34E9-F237-481D-A20F-9704EE7B88D7}");

      public static readonly ID MessageText = ID.Parse("{4157F17D-CDA9-4CFE-AF09-F472635C87ED}");

    }
    
    /// <summary>Gets or sets the "Subject" field.</summary>
    public string Subject 
    {
      get 
      {
        return this.InnerItem[FieldIds.Subject];
      }
      set
      {
        this.InnerItem[FieldIds.Subject] = value;
      }
    }
  
    /// <summary>Gets or sets the "From" field.</summary>
    public string From 
    {
      get 
      {
        return this.InnerItem[FieldIds.From];
      }
      set
      {
        this.InnerItem[FieldIds.From] = value;
      }
    }
  
    /// <summary>Gets or sets the "To" field.</summary>
    public string To 
    {
      get 
      {
        return this.InnerItem[FieldIds.To];
      }
      set
      {
        this.InnerItem[FieldIds.To] = value;
      }
    }
  
    /// <summary>Gets or sets the "Cc" field.</summary>
    public string Cc 
    {
      get 
      {
        return this.InnerItem[FieldIds.Cc];
      }
      set
      {
        this.InnerItem[FieldIds.Cc] = value;
      }
    }
  
    /// <summary>Gets or sets the "Bcc" field.</summary>
    public string Bcc 
    {
      get 
      {
        return this.InnerItem[FieldIds.Bcc];
      }
      set
      {
        this.InnerItem[FieldIds.Bcc] = value;
      }
    }
  
    /// <summary>Gets or sets the "Message RichText" field.</summary>
    public string MessageRichText 
    {
      get 
      {
        return this.InnerItem[FieldIds.MessageRichText];
      }
      set
      {
        this.InnerItem[FieldIds.MessageRichText] = value;
      }
    }
  
    /// <summary>Gets or sets the "Message Text" field.</summary>
    public string MessageText 
    {
      get 
      {
        return this.InnerItem[FieldIds.MessageText];
      }
      set
      {
        this.InnerItem[FieldIds.MessageText] = value;
      }
    }
  
    public static EmailTemplate Create(Item item) 
    {
      return new EmailTemplate(item);
    }

    public static implicit operator Item (EmailTemplate item)
    {
      if (item == null)
      {
        return null;
      }

      return item.InnerItem;
    }

    public static explicit operator EmailTemplate(Item item)
    {
      if (item == null)
      {
        return null;
      }

      if (item.TemplateID != TemplateID)
      {
        return null;
      }

      return Create(item);
    }
  }
  
  #endregion
}

#pragma warning restore 1591
